<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="RKAINS007" failures="0" tests="14" name="Default test" time="4.574" errors="0" timestamp="05 Aug 2023 16:07:49 GMT">
  <testcase classname="TestWatchVid.Register" name="@BeforeClass beforeClass" time="4.429">
    <failure type="org.openqa.selenium.WebDriverException" message="java.net.ConnectException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:56639
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:17:03&amp;apos;
System info: host: &amp;apos;RKAINS007&amp;apos;, ip: &amp;apos;192.168.61.234&amp;apos;, os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;18.0.2.1&amp;apos;
Driver info: driver.version: RemoteWebDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: java.net.ConnectException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:56639
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'RKAINS007', ip: '192.168.61.234', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:92)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:277)
at TestWatchVid.Register.beforeClass(Register.java:45)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.net.ConnectException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:56639
at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:247)
at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:165)
at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257)
at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)
at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)
at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)
at okhttp3.RealCall.execute(RealCall.java:77)
at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:103)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:155)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
... 27 more
Caused by: java.net.ConnectException: Connection refused: no further information
at java.base/sun.nio.ch.Net.pollConnect(Native Method)
at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:539)
at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:594)
at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
at java.base/java.net.Socket.connect(Socket.java:633)
at okhttp3.internal.platform.Platform.connectSocket(Platform.java:129)
at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:245)
... 47 more
]]>
    </failure>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="TestWatchVid.Register" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="TestWatchVid.Register" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="TestWatchVid.Register" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="TestWatchVid.Register" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="TestWatchVid.Register" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="TestWatchVid.Register" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="TestWatchVid.Register" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="TestWatchVid.Register" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="TestWatchVid.Register" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="TestWatchVid.Register" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="TestWatchVid.Register" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="TestWatchVid.Register" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="TestWatchVid.Register" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="TestWatchVid.Register" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="TestWatchVid.Register" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="TestWatchVid.Register" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="TestWatchVid.Register" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="TestWatchVid.Register" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="TestWatchVid.Register" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="TestWatchVid.Register" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="TestWatchVid.Register" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="TestWatchVid.Register" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="TestWatchVid.Register" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="TestWatchVid.Register" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="TestWatchVid.Register" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="TestWatchVid.Register" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="TestWatchVid.Register" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="TestWatchVid.Register" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="TestWatchVid.Register" name="@AfterClass afterclass" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass afterclass -->
  <testcase classname="TestWatchVid.Register" name="byjuChildNm" time="0.0">
    <skipped/>
  </testcase> <!-- byjuChildNm -->
  <testcase classname="TestWatchVid.Register" name="byjubyjuEnterMob" time="0.0">
    <skipped/>
  </testcase> <!-- byjubyjuEnterMob -->
  <testcase classname="TestWatchVid.Register" name="byjuEmail" time="0.0">
    <skipped/>
  </testcase> <!-- byjuEmail -->
  <testcase classname="TestWatchVid.Register" name="byjuState" time="0.0">
    <skipped/>
  </testcase> <!-- byjuState -->
  <testcase classname="TestWatchVid.Register" name="byjuValidMob" time="0.0">
    <skipped/>
  </testcase> <!-- byjuValidMob -->
  <testcase classname="TestWatchVid.Register" name="byjuRadioBtn" time="0.0">
    <skipped/>
  </testcase> <!-- byjuRadioBtn -->
  <testcase classname="TestWatchVid.Register" name="byju" time="0.0">
    <skipped/>
  </testcase> <!-- byju -->
  <testcase classname="TestWatchVid.Register" name="byjuChossTpk" time="0.0">
    <skipped/>
  </testcase> <!-- byjuChossTpk -->
  <testcase classname="TestWatchVid.Register" name="byjuTimSlot" time="0.0">
    <skipped/>
  </testcase> <!-- byjuTimSlot -->
  <testcase classname="TestWatchVid.Register" name="byju1Bookcls" time="0.0">
    <skipped/>
  </testcase> <!-- byju1Bookcls -->
  <testcase classname="TestWatchVid.Register" name="byjuBookedClssText" time="0.0">
    <skipped/>
  </testcase> <!-- byjuBookedClssText -->
  <testcase classname="TestWatchVid.Register" name="byjuSideNavItems" time="0.0">
    <skipped/>
  </testcase> <!-- byjuSideNavItems -->
  <testcase classname="TestWatchVid.Register" name="byjuprofile" time="0.0">
    <skipped/>
  </testcase> <!-- byjuprofile -->
  <testcase classname="TestWatchVid.Register" name="byjuOnProfile" time="0.0">
    <skipped/>
  </testcase> <!-- byjuOnProfile -->
</testsuite> <!-- Default test -->
